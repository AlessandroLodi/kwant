--- original
+++ modified
@@ -17,6 +17,7 @@
 
 # For plotting
 from matplotlib import pyplot
+import _defs
 
 
 def make_system(a=1, t=1.0, r=10):
@@ -65,28 +66,40 @@
 
         energies.append(ev)
 
-    pyplot.figure()
+    fig = pyplot.figure()
     pyplot.plot(Bfields, energies)
-    pyplot.xlabel("magnetic field [arbitrary units]")
-    pyplot.ylabel("energy [t]")
-    pyplot.show()
+    pyplot.xlabel("magnetic field [arbitrary units]",
+                  fontsize=_defs.mpl_label_size)
+    pyplot.ylabel("energy [t]", fontsize=_defs.mpl_label_size)
+    pyplot.setp(fig.get_axes()[0].get_xticklabels(),
+                fontsize=_defs.mpl_tick_size)
+    pyplot.setp(fig.get_axes()[0].get_yticklabels(),
+                fontsize=_defs.mpl_tick_size)
+    fig.set_size_inches(_defs.mpl_width_in, _defs.mpl_width_in * 3. / 4.)
+    fig.subplots_adjust(left=0.15, right=0.95, top=0.95, bottom=0.15)
+    fig.savefig("closed_system_result.pdf")
+    fig.savefig("closed_system_result.png", dpi=_defs.dpi)
 
 
 def plot_wave_function(sys):
+    size = (_defs.figwidth_in, _defs.figwidth_in)
+
     # Calculate the wave functions in the system.
     ham_mat = sys.hamiltonian_submatrix(sparse=True)
     evecs = sla.eigsh(ham_mat, k=20, which='SM')[1]
 
     # Plot the probability density of the 10th eigenmode.
-    kwant.plotter.map(sys, np.abs(evecs[:, 9])**2, colorbar=False)
+    kwant.plotter.map(sys, np.abs(evecs[:, 9])**2, colorbar=False,
+                      file="closed_system_eigenvector.pdf",
+                      fig_size=size, dpi=_defs.dpi)
+    kwant.plotter.map(sys, np.abs(evecs[:, 9])**2, colorbar=False,
+                      file="closed_system_eigenvector.png",
+                      fig_size=size, dpi=_defs.dpi)
 
 
 def main():
     sys = make_system()
 
-    # Check that the system looks as intended.
-    kwant.plot(sys)
-
     # Finalize the system.
     sys = sys.finalized()
 
